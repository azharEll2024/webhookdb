# frozen_string_literal: true

require "webhookdb/postgres/model"

class Webhookdb::OrganizationMembership < Webhookdb::Postgres::Model(:organization_memberships)
  many_to_one :organization, class: "Webhookdb::Organization"
  many_to_one :customer, class: "Webhookdb::Customer"
  many_to_one :role, class: "Webhookdb::OrganizationRole"

  def customer_email
    return self.customer.email
  end

  def organization_name
    return self.organization.name
  end

  def set_status
    self.status = ""
    self.status = self.role.name unless self.role.nil?
    self.status = "invited" unless self.verified
  end

  def before_create
    self.set_status
    super
  end

  def before_save
    self.set_status
    super
  end
end

# Table: organization_memberships
# -----------------------------------------------------------------------------------------------
# Columns:
#  id              | integer | PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
#  customer_id     | integer | NOT NULL
#  organization_id | integer | NOT NULL
#  role_id         | integer |
#  verified        | boolean | NOT NULL DEFAULT true
#  invitation_code | text    |
#  status          | text    |
# Indexes:
#  organization_memberships_pkey | PRIMARY KEY btree (id)
# Foreign key constraints:
#  organization_memberships_customer_id_fkey     | (customer_id) REFERENCES customers(id)
#  organization_memberships_organization_id_fkey | (organization_id) REFERENCES organizations(id)
#  organization_memberships_role_id_fkey         | (role_id) REFERENCES organization_roles(id)
# -----------------------------------------------------------------------------------------------
